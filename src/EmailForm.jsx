import { useId } from "react";

export default function EmailForm() {
    /*
     * The useId hook generates a unique ID for a DOM element. We can't hardcode the ID because we don't know how many
     * times the component might be used on a page. We also don't want to use a random number generator because we want
     * the ID to be the same every time the component is rendered, which the useId hook guarantees.
     *
     * The IDs generated by useId will begin with a `:`, which is a valid ID character but not valid for use in CSS or
     * in JavaScript's `document.querySelector`. This forces us to use refs instead, which is good because we shouldn't
     * be selecting DOM elements any other way in React anyway.
     *
     * Note that if we have multiple elements in a component that need IDs, we don't need to worry about the extra
     * overhead of calling useId multiple times. We already know the hook will generate a unique ID for each instance of
     * the component, and that won't change when the component is re-rendered, so we can just append a suffix to the ID
     * for each element instead, as seen below..
     */
    const id = useId();

    return (
        <>
            <label htmlFor={`${id}-email`}>Email</label>
            <input id={`${id}-email`} type="email" />
            <label htmlFor={`${id}-name`}>Name</label>
            <input id={`${id}-name`} type="text" />
        </>
    );
}
